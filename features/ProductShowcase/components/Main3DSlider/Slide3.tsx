/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 public/assets/ProductShowcase/scene-3.glb -o features/ProductShowcase/components/Slide3.tsx -t 
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import TrackableObject from "./TrackableObject";
import FakeShadow from "./FakeShadow";

type GLTFResult = GLTF & {
	nodes: {
		FluffyThing: THREE.Mesh;
		GardenLight001: THREE.Mesh;
		GardenThing: THREE.Mesh;
		Plant001: THREE.Mesh;
	};
	materials: {
		["Material.Scene2"]: THREE.MeshStandardMaterial;
	};
};

type Props = JSX.IntrinsicElements["group"] & {
	slide: number;
};

export function Slide3({ slide, ...props }: Props) {
	const { nodes, materials } = useGLTF(
		"/assets/ProductShowcase/scene-3.glb"
	) as GLTFResult;

	return (
		<>
			<TrackableObject
				slide={slide}
				offset={0}
				motionPathScale={0.6}
				position={[-0.299, -0.121, -0.675]}
			>
				<mesh
					scale={2.5}
					geometry={nodes.FluffyThing.geometry}
					material={materials["Material.Scene2"]}
					userData={{
						isBlurred: true,
					}}
				/>
			</TrackableObject>

			<TrackableObject
				slide={slide}
				offset={0.05}
				motionPathScale={0.85}
				position={[0.026, -0.071, -0.675]}
				shadow={
					<FakeShadow
						slide={slide}
						color="#5bf1da"
						opacity={0.1}
						scale={4}
					/>
				}
			>
				<mesh
					rotation={[0, -0.973, 0]}
					scale={2.5}
					geometry={nodes.Plant001.geometry}
					material={materials["Material.Scene2"]}
				></mesh>
			</TrackableObject>
		</>
	);
}

useGLTF.preload("/assets/ProductShowcase/scene-3.glb");
