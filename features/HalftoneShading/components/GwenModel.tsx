/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.11 public/assets/HalftoneShading/gwen.glb -o features/HalftoneShading/components/GwenModel.tsx -t 
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
	nodes: {
		["Base_Material_#25_0"]: THREE.Mesh;
		cabeza_Cuerpo_0: THREE.Mesh;
		Capucha_Capucha_0: THREE.Mesh;
	};
	materials: {
		Material_25: THREE.MeshStandardMaterial;
		Cuerpo: THREE.MeshStandardMaterial;
		Capucha: THREE.MeshStandardMaterial;
	};
};

type ContextType = Record<
	string,
	React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

type Props = JSX.IntrinsicElements["group"] & {
	shaderMaterial?: THREE.ShaderMaterial;
};

export function GwenModel({ shaderMaterial, ...props }: Props) {
	const { nodes, materials } = useGLTF(
		"/assets/HalftoneShading/gwen.glb"
	) as GLTFResult;

	return (
		<group
			{...props}
			dispose={null}
		>
			<group scale={0.015}>
				<group
					position={[-0.635, 0, 0.399]}
					scale={2.54}
				>
					<mesh
						geometry={nodes.cabeza_Cuerpo_0.geometry}
						material={shaderMaterial ?? materials.Cuerpo}
						position={[0, 62.098, 0]}
					></mesh>
				</group>
				<group
					position={[-0.647, 0, -2.178]}
					scale={2.54}
				>
					<mesh
						geometry={nodes.Capucha_Capucha_0.geometry}
						material={shaderMaterial ?? materials.Capucha}
						position={[-0.422, 62.098, 1.015]}
					></mesh>
				</group>
				<mesh
					geometry={nodes["Base_Material_#25_0"].geometry}
					material={shaderMaterial ?? materials.Material_25}
					position={[0, 0, -24.02]}
					rotation={[-Math.PI / 2, 0, 0.323]}
				></mesh>
			</group>
		</group>
	);
}

useGLTF.preload("/assets/HalftoneShading/gwen.glb");
