/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.11 public/assets/Firework/park.glb -o features/Fireworks/components/Park.tsx -t -r C:/Program Files/Git/assets/Firework 
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import StreetLight from "./StreetLight";

type GLTFResult = GLTF & {
	nodes: {
		Ground: THREE.Mesh;
		GrassPlane: THREE.Mesh;
		GrassHill: THREE.Mesh;
		Bridge: THREE.Mesh;
		BridgeRails: THREE.Mesh;
		BridgeRailsBase: THREE.Mesh;
		BridgeRailsTop: THREE.Mesh;
		BridgeTop: THREE.Mesh;
		Tree: THREE.Mesh;
		Сrown: THREE.Mesh;
		Tree001: THREE.Mesh;
		Crown: THREE.Mesh;
		Rocks: THREE.Mesh;
		Grass: THREE.Mesh;
		Bush: THREE.Mesh;
		Bench: THREE.Mesh;
		BenchFrame: THREE.Mesh;
		Lamp: THREE.Mesh;
		LampBolb: THREE.Mesh;
		Lamp001: THREE.Mesh;
		Path: THREE.Mesh;
		Water: THREE.Mesh;
		Tile: THREE.Mesh;
	};
	materials: {
		Ground: THREE.MeshStandardMaterial;
		Grass: THREE.MeshStandardMaterial;
		Rock2: THREE.MeshStandardMaterial;
		Wood: THREE.MeshStandardMaterial;
		Rock: THREE.MeshStandardMaterial;
		Wood2: THREE.MeshStandardMaterial;
		Leaf: THREE.MeshStandardMaterial;
		Metal: THREE.MeshStandardMaterial;
		Emission: THREE.MeshStandardMaterial;
		Water: THREE.MeshStandardMaterial;
	};
};

export function ParkModel(props: JSX.IntrinsicElements["group"]) {
	const { nodes, materials } = useGLTF(
		"/assets/Firework/park.glb"
	) as GLTFResult;

	return (
		<group
			{...props}
			dispose={null}
		>
			<mesh
				geometry={nodes.Ground.geometry}
				material={materials.Ground}
				receiveShadow
			/>
			<mesh
				geometry={nodes.GrassPlane.geometry}
				material={materials.Grass}
				receiveShadow
			/>
			<mesh
				geometry={nodes.GrassHill.geometry}
				material={materials.Grass}
				position={[3, 0, -3]}
				receiveShadow
			/>
			<mesh
				geometry={nodes.Bridge.geometry}
				material={materials.Rock2}
				position={[0.227, -0.119, 0.303]}
				castShadow
			>
				<mesh
					geometry={nodes.BridgeRails.geometry}
					material={materials.Wood}
					castShadow
				/>
				<mesh
					geometry={nodes.BridgeRailsBase.geometry}
					material={materials.Rock}
					receiveShadow
				/>
				<mesh
					geometry={nodes.BridgeRailsTop.geometry}
					material={materials.Wood2}
					position={[0, 0.183, 0]}
					castShadow
				/>
				<mesh
					geometry={nodes.BridgeTop.geometry}
					material={materials.Rock2}
					receiveShadow
				/>
			</mesh>
			<mesh
				geometry={nodes.Tree.geometry}
				material={materials.Wood}
				position={[-2.585, 0.2, 2.565]}
				scale={1.467}
				castShadow
			>
				<mesh
					geometry={nodes.Сrown.geometry}
					material={materials.Leaf}
					position={[-0.351, 1.676, 0.373]}
					rotation={[0.344, 0.329, 0.159]}
					castShadow
				/>
			</mesh>
			<mesh
				geometry={nodes.Tree001.geometry}
				material={materials.Wood}
				position={[-2.766, 0.2, -2.018]}
				rotation={[-Math.PI, 1.006, -Math.PI]}
				scale={1.291}
				castShadow
			>
				<mesh
					geometry={nodes.Crown.geometry}
					material={materials.Leaf}
					position={[-0.351, 1.676, 0.373]}
					rotation={[0.344, 0.329, 0.159]}
					castShadow
				/>
			</mesh>
			<mesh
				geometry={nodes.Rocks.geometry}
				material={materials.Rock}
				position={[-2.203, 0.2, 1.65]}
				scale={1.284}
				receiveShadow
			/>
			<mesh
				geometry={nodes.Grass.geometry}
				material={materials.Leaf}
				position={[1.441, 0.2, -3.188]}
				rotation={[0, 0.056, 0]}
				scale={0.851}
				castShadow
			/>
			<mesh
				geometry={nodes.Bush.geometry}
				material={materials.Leaf}
				position={[2.923, 0.392, -3.134]}
				rotation={[Math.PI, -1.528, Math.PI]}
				castShadow
			/>
			<mesh
				geometry={nodes.Bench.geometry}
				material={materials.Wood}
				position={[2.6, 0.2, 2.767]}
				castShadow
			>
				<mesh
					geometry={nodes.BenchFrame.geometry}
					material={materials.Metal}
					castShadow
				/>
			</mesh>

			<mesh
				geometry={nodes.Lamp.geometry}
				material={materials.Metal}
				position={[2.718, 0.2, 1.416]}
				castShadow
			>
				<StreetLight
					nodes={nodes}
					position={[0, 2.832, 0]}
				/>
			</mesh>
			<mesh
				geometry={nodes.Lamp001.geometry}
				material={materials.Metal}
				position={[-1.572, 0.2, -3.064]}
				castShadow
			>
				<StreetLight
					nodes={nodes}
					position={[0, 2.832, 0]}
				/>
			</mesh>

			<mesh
				geometry={nodes.Path.geometry}
				material={materials.Rock}
				position={[0, 0.005, 0]}
				scale={[1, 1, 4]}
				receiveShadow
			/>
			<mesh
				geometry={nodes.Water.geometry}
				material={materials.Water}
				receiveShadow
			/>
			<mesh
				geometry={nodes.Tile.geometry}
				material={materials.Rock}
				position={[-0.161, 0.001, 2.282]}
			/>
		</group>
	);
}

useGLTF.preload("/assets/Firework/park.glb");
